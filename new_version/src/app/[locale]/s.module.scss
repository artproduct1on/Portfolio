@use "../../assets/styles/var" as v;

.home {
  @include v.flex(center, space-evenly, column);
  margin-top: 5rem;
  padding: 0 var(--container);
  position: relative;
  height: calc(100vh - 5rem);

  &::before {
    content: "";
    position: absolute;
    z-index: -1000;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: url("../../assets/bg.main.gif");
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
    filter: contrast(200%) brightness(50%);
  }

  .homeTitle {
    margin: 0;
    width: 100%;
    @include v.flex(center, center, column);
    gap: 1rem;
    font-weight: 500;
    color: v.$color;
  }

  .homeTitlePart {
    font-size: 9vmin;
    line-height: 9vmin;
    text-align: center;
    transition: v.$tObserver translate;

    &:nth-child(1) {
      translate: -50%;
    }

    &:nth-child(2) {
      translate: 50%;
      @include v.textGradient;
    }

    &:nth-child(3) {
      translate: -50%;
      line-height: 12vmin;
      font-size: 12vmin;
    }
  }


  .homeList {
    padding: 0;
    @include v.flex;
    gap: 1.5rem;
    list-style-type: none;
  }

  .homeListItem {
    transition: v.$tObserver translate;
    @include v.flex;

    &:nth-child(odd) {
      translate: 50vw -50vh;
    }

    &:nth-child(even) {
      translate: -50vw 50vh;
    }
  }

  .homeListLink {
    backdrop-filter: blur(5rem);
    @include v.flex;
    padding: .8rem;
    border-radius: 50%;
    border: .1rem solid v.$color;
    cursor: pointer;
    opacity: .5;
    width: 3.5rem;
    height: 3.5rem;

    svg {
      width: 100%;
      height: 100%;
      fill: v.$color;
    }

    &:hover {
      opacity: 1;
    }
  }

  .homeNext {
    position: relative;
    @include v.flex;
    background: none;
    border: none;
    height: 8rem;
    width: 4rem;
    padding: 0;
    overflow: hidden;
    cursor: pointer;
    transition: v.$tObserver;

    &:hover {
      .homeNextText {
        color: v.$c2;
      }

      .homeNextShell {
        &::after {
          content: "";
          translate: 0 0;
          animation: nextHover 1s;
        }
      }
    }
  }

  .homeNextText {
    position: absolute;
    left: 50%;
    top: 50%;
    translate: -65% -100%;
    rotate: -90deg;
    color: v.$cSpan;
    font-size: 1.2rem;
    text-transform: uppercase;
    letter-spacing: 1.2rem;
    transition: .2s color;
  }

  .homeNextShell {
    width: .3rem;
    height: 100%;
    background-color: v.$color;
    @include v.flex;


    &::after {
      content: "";
      width: 100%;
      height: 100%;
      background: v.$bgItem ;
      translate: 0 -100%;
      animation: next 1s infinite;
    }
  }

  @keyframes next {
    from {
      translate: 0 -100%;
    }

    to {
      translate: 0 100%;
    }
  }

  @keyframes nextHover {
    from {
      translate: 0 -100%;
    }

    to {
      translate: 0 0;
    }
  }
}

.home[data-active="true"] {

  .homeTitlePart,
  .homeListItem {
    translate: 0;
  }
}


.about {
  background: linear-gradient(to bottom,
      black,
      rgb(0, 2, 15),
      rgb(0, 0, 0));
  padding: 2rem var(--container);

  @include v.flex(center, flex-start, column);
  gap: 1rem;

  .aboutBlock {
    @include v.flex(center, center, row, wrap);
    z-index: 10;
    gap: 2rem;
  }

  .aboutPhoto {
    position: relative;
    width: 95%;
    min-height: 20rem;
    height: 45rem;
    border-radius: 0 25% 0 25%;
    overflow: hidden;
    box-shadow: 1rem 1rem 3rem #000000;
    animation: photo 3s infinite backwards;
    transition: v.$tObserver;
  }

  @keyframes photo {
    0% {
      translate: 0;
    }

    50% {
      translate: 0 -1%;
    }

    100% {
      translate: 0;
    }
  }

  .aboutPhotoImg {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .aboutPhotoText {
    position: absolute;
    margin: 0;
    z-index: 2;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
    font-size: 10rem;
    font-weight: 100;
    @include v.font;
    color: v.$c2;
    opacity: .1;
  }

  .aboutList {
    @include v.flex(center, center, column);
    position: relative;
    padding: 0;
    gap: 1rem;
    width: 98%;
  }

  .aboutListLi {
    @include v.font;
    @include v.flex(flex-start, space-between, row, wrap);
    width: calc(100% - 2rem);
    font-weight: 200;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.01);
    transition: v.$tObserver translate;
    translate: 100vw -100%;

    &:nth-child(2n) {
      translate: 200vw 100%;
    }
  }

  .aboutListSpan {
    max-width: 40%;
    font-size: 1.4rem;
    font-weight: 300;
    color: v.$cSpan;
    text-align: left;
    white-space: nowrap;
    cursor: default;
    user-select: none;
    white-space: normal;
    word-wrap: break-word;
    overflow-wrap: break-word;
  }

  .aboutListText {
    margin: 0;
    max-width: 47.5%;
    text-align: right;
    color: v.$color;
    font-weight: 100;
    font-size: 1.6rem;
    word-wrap: break-word;
    overflow-wrap: break-word;
  }

  .aboutExperience {
    @include v.flex(center, center, column);
    gap: 2rem;
  }

}

.about[data-active="true"] {
  opacity: 1;

  .aboutListLi {
    translate: 0;
  }
}

.work {
  background: linear-gradient(to bottom,
      black,
      rgb(1, 4, 19),
      rgb(0, 0, 0));
  gap: 1rem;
  @include v.flex(center, center, column);
  margin-top: 5rem;

  .workCompetence {
    width: 100vw;
    padding: 1rem;
    margin: 0;
    @include v.flex(center, center, row, wrap);
    gap: 1rem;
    background: rgba(27, 27, 27, 0.3);
  }

  .workCompetenceItem {
    @include v.flex(center, center, column);
    padding: .5rem;
    border-radius: .5rem;
  }

  .workCompetenceCircle {
    --turnCircle: calc(attr(data-perc turn) / 100);
    position: relative;
    width: 7rem;
    height: 7rem;
    margin: .5rem;
    background: conic-gradient(v.$c1 0turn,
        v.$c2 var(--turnCircle),
        rgba(204, 204, 204, 0.1) var(--turnCircle),
        rgba(204, 204, 204, 0.1) 1turn);
    border-radius: 50%;
    opacity: 0;

    rotate: var(--turnCircle);

    &::before {
      content: attr(data-perc) "%";
      color: v.$color;
      position: absolute;
      top: 50%;
      left: 50%;
      translate: -50% -50%;
      width: 85%;
      height: 85%;
      background-color: rgb(20, 20, 20);
      border-radius: 50%;
      @include v.flex;
      font-size: 1.6rem;
    }

    transition: v.$tObserver;
  }

  .workCompetenceLabel {
    text-align: center;
    font-size: 1.4rem;
    color: v.$color;
  }



  .workProcess {
    width: 80%;
    position: relative;
    @include v.flex(center, center, column);
    margin: 0;
    padding: 3rem 0;
    list-style-type: none;

    &::before {
      content: "";
      position: absolute;
      top: 0;
      right: -1.6rem;
      width: .2rem;
      height: 0%;
      background-color: v.$c2;
      transition: 5s height;
    }
  }

  .workProcessItem {
    @include v.flex(flex-end, center, column);
    position: relative;
    width: 100%;

    &::before {
      content: attr(data-num);
      position: absolute;
      top: .3rem;
      right: -2.25rem;
      @include v.flex(center, center, column);
      text-align: center;
      color: v.$c3;
      font-size: .8rem;
      font-weight: 900;
      margin: 0;
      padding: 0;
      width: 1.5rem;
      height: 1.5rem;
      border-radius: 50%;
      background-color: v.$c2;
    }
  }

  .workProcessName {
    @include v.font;
    @include v.textGradient;
    width: min-content;
    font-weight: 900;
    font-size: 1.8rem;
    margin-top: 0;
  }

  .workProcessText {
    font-size: 1.4rem;
    opacity: 0;
    color: v.$color;
    transition: 5s opacity;
  }

}

.work[data-active="true"] {
  opacity: 1;

  .workCompetenceCircle {
    opacity: 1;
    rotate: 0turn;
  }

  .workProcess {
    &::before {
      height: 100%;
    }
  }

  .workProcessText {
    opacity: .8;
    color: v.$color;
  }
}


@media (min-width: 480px) {
  .about .aboutPhoto {
    max-width: 35rem;
  }

  .work {
    .workProcess {
      align-items: flex-start;

      &::before {
        left: 50%;
        translate: -50%;
      }
    }

    .workProcessItem {
      position: relative;
      width: calc(50% - 1.5rem);
      text-align: right;

      &:nth-child(2n) {
        text-align: start;
        align-self: flex-end;
        align-items: flex-start;

        &::before {
          left: -2.25rem;
        }
      }
    }
  }

}

@media (min-width: 768px) {
  .about {
    .aboutPhoto {
      max-width: 30rem;
    }

    .aboutList {
      width: 50%;
    }
  }

}


@media (min-width: 1367px) {
  .home::before {
    background-size: contain;
  }
}